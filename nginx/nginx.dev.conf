user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
}

http {
    map $http_connection $connection_upgrade {
    "~*Upgrade" $http_connection;
    default keep-alive;
    }


    upstream web-ui {
        server host.docker.internal:4200;
        # server host.docker.internal:6000;

        ip_hash;
    }

    upstream auth-api {
        server host.docker.internal:5000;
        # server host.docker.internal:6000;

        # ip_hash;
    }

    upstream users-api {
        server host.docker.internal:5001;

        ip_hash;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        return 301 https://$host$request_uri;
    }

    # server {
    #     listen 80;

    #     server_name foo.com;
    #     return 301 https://foo.com$request_uri;
    # }

    # server {
    #     listen 6000;
    #     listen [::]:6000;

    #     server_name solarenginner.net;
    #     # server_name 10.ttt.ttt.104;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Forwarded-For $remote_addr;

    #     location / {
    #         proxy_pass http://web-ui/;
    #     }
    # }

    # server {
    #     listen 6000;
    #     listen [::]:6000;

    #     server_name host.docker.internal;
    #     # server_name 10.ttt.ttt.104;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Forwarded-For $remote_addr;

    #     location / {
    #         proxy_pass http://web-ui/;
    #     }
    # }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        server_name solarenginner.net www.solarenginner.net;

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        ssl_certificate /etc/nginx/solarengineer.net.crt;
        ssl_certificate_key /etc/nginx/solarengineer.net.rsa;

        location / {
            proxy_pass          http://web-ui;
            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /auth/ {
            proxy_pass          http://auth-api/;
            proxy_set_header    X-Forwarded-For $remote_addr;
            # proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            # proxy_redirect off;
        }


        location /auth/login/google {
            proxy_pass          https://host.docker.internal:6000;
            proxy_set_header    X-Forwarded-For $remote_addr;
            # proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            # proxy_redirect off;
        }

        location /signin-google {
            proxy_pass          http://host.docker.internal:4200;
            proxy_set_header    X-Forwarded-For $remote_addr;
            # proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            # proxy_redirect off;
        }

        location /users/ {
            proxy_pass          http://users-api;
            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /connections-hub/ {
            proxy_pass          http://users-api/hubs/connections;
            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_set_header    X-Forwarded-For $remote_addr;
            # proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            # proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache off;
            proxy_http_version 1.1;

            proxy_buffering off;

            proxy_read_timeout 100s;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /messages/ {
            proxy_pass          http://host.docker.internal:5002;
            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }


        location /projects/ {
            proxy_pass          http://host.docker.internal:5003;
            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}