.containerOuter {
  --color-gray-500: rgba(107, 114, 128, 100%);
  --color-gray-600: rgba(75, 85, 99, 100%);
  --color-gray-700: rgba(55, 65, 81, 100%);
  --color-purple-300: rgba(216, 180, 254, 100%);
  --color-blue-500: rgba(59, 130, 246, 100%);
  --color-violet-500: rgba(139, 92, 246, 100%);
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1),
  0 8px 10px -6px rgb(0 0 0 / 0.1);

  display: flex;
  align-items: center;
  justify-content: center;
  width: 100vw;
  min-height: 100vh;
}

.containerInner {
  width: 100%;
  min-height: 100vh;
  padding: 16px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
  "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif,
  "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}


@media (min-width: 640px) {
  .containerInner {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .containerInner {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .containerInner {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .containerInner {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .containerInner {
    max-width: 1536px;
  }
}

.title {
  margin: 0;
  font-size: 3rem;
  font-weight: 800;
  line-height: 1.5;
  color: var(--color-gray-700);
}

@media (min-width: 768px) {
  .title {
    font-size: 5rem;
  }
}

.titlePink {
  color: var(--color-purple-300);
}

.subtitle {
  margin: 0;
  color: var(--color-gray-700);
  font-weight: 400;
  font-size: 1.5rem;
  line-height: 2rem;
}

.cardGrid {
  display: grid;
  gap: 0.75rem;
  padding-top: 0.75rem;
  margin-top: 0.75rem;
  text-align: center;
}

@media (min-width: 768px) {
  .cardGrid {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .cardGrid {
    width: calc(200% / 3);
  }
}

.card {
  display: flex;
  flex-direction: column;
  //justify-content: center;
  //text-align: center;
  align-items: center;
  padding: 1.5rem;
  transition-duration: 500ms;
  border: 2px solid var(--color-gray-500);
  border-radius: 0.25rem;
  box-shadow: var(--tw-shadow);
}

.card:hover {
  transform: scale(1.05);
}

@media (prefers-reduced-motion) {
  .card:hover {
    transform: none;
  }
}

.flexPaper {
  flex: 1;
  margin: 16px;
  min-width: 350px;
}

.root {
  display: flex;
  flex-wrap: wrap;
}

/* Remove default bullets */
ul, #myUL {
  list-style-type: none;
}

/* Remove margins and padding from the parent ul */
#myUL {
  margin: 0;
  padding: 0;
}

/* Style the caret/arrow */
.caret {
  cursor: pointer;
  user-select: none; /* Prevent text selection */
}

/* Create the caret/arrow with a unicode, and style it */
.caret::before {
  content: "\25B6";
  color: black;
  display: inline-block;
  margin-right: 6px;
}

/* Rotate the caret/arrow icon when clicked on (using JavaScript) */
.caret-down::before {
  transform: rotate(90deg);
}

/* Hide the nested list */
.nested {
  display: none;
}

/* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
.active {
  display: block;
}

.tree {
  --spacing: 1.5rem;
  --radius: 10px;
}

.tree li {
  display: block;
  position: relative;
  padding-left: calc(2 * var(--spacing) - var(--radius) - 2px);
}

.tree ul {
  margin-left: calc(var(--radius) - var(--spacing));
  padding-left: 0;
}

.tree ul li {
  border-left: 2px solid #ddd;
}

.tree ul li:last-child {
  border-color: transparent;
}

.tree ul li::before {
  content: '';
  display: block;
  position: absolute;
  top: calc(var(--spacing) / -2);
  left: -2px;
  width: calc(var(--spacing) + 2px);
  height: calc(var(--spacing) + 1px);
  border: solid #ddd;
  border-width: 0 0 2px 2px;
}

.tree summary {
  display: block;
  cursor: pointer;
}

.tree summary::marker,
.tree summary::-webkit-details-marker {
  display: none;
}

.tree summary:focus {
  outline: none;
}

.tree summary:focus-visible {
  outline: 1px dotted #000;
}

.tree li::after,
.tree summary::before {
  content: '';
  display: block;
  position: absolute;
  top: calc(var(--spacing) / 2 - var(--radius));
  left: calc(var(--spacing) - var(--radius) - 1px);
  width: calc(2 * var(--radius));
  height: calc(2 * var(--radius));
  border-radius: 50%;
  background: #ddd;
}

.tree summary::before {
  content: '+';
  z-index: 1;
  background: #696;
  color: #fff;
  line-height: calc(2 * var(--radius) - 2px);
  text-align: center;
}

.tree details[open] > summary::before {
  content: 'âˆ’';
}
