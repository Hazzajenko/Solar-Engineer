version: '3'

services:

  reverse-proxy:
    image: nginx:1.17.10
    # container_name: reverse_proxy
    # depends_on:
    #     - users-api
    volumes:
      - ./nginx.local-dev.conf:/etc/nginx/nginx.conf
      - ./etc/ssl/solarengineer.net/solarengineer.net.crt:/etc/nginx/solarengineer.net.crt
      - ./etc/ssl/solarengineer.net/solarengineer.net.rsa:/etc/nginx/solarengineer.net.rsa
      # - ./solarengineer.net.pem:/etc/nginx/solarengineer.net.pem
      # - ./solarengineer.net.key:/etc/nginx/solarengineer.net.key
      # - ./nginx/cert.pem:/etc/nginx/cert.pem
      # - ./nginx/cert.key:/etc/nginx/cert.key
    ports:
      - 443:443
      - 80:80
    # networks:
    #   - nginx.docker

# networks:
#   nginx.docker:
#     name: nginx.docker
#     external: true
  # angular-client:
  #   image: angularclient:1.0.1
  #   container_name: angular-client
  #   depends_on:
  #     - users-api
  #   ports:
  #     - 4200:80
  #   restart: on-failure

  # users-api:
  #   image: users-api:1.0.0
  #   # container_name: users-api
  #   # depends_on:
  #   #   - redis
  #   #   - postgres
  #   ports:
  #     - 5004:80
  #     - 6004:443
    # restart: on-failure

  # postgres:
  #   image: 'postgres:14.0'
  #   ports:
  #     - "5432:5432"
  #   restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: SolarEngineer.Root


  # rabbitmq:
  #   image: rabbitmq:3-management
  #   hostname: "rabbitmq"
  #   labels:
  #     NAME: "rabbitmq"
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"

  # redis:
  #   image: redis
  #   ports:
  #     - "6379:6379"



