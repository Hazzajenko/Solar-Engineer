import { TestBed } from '@angular/core/testing';
import { provideMockActions } from '@ngrx/effects/testing';
import { Action } from '@ngrx/store';
import { provideMockStore } from '@ngrx/store/testing';
import { hot } from 'jasmine-marbles';
import { Observable } from 'rxjs';

import * as <%= className %>Actions from './<%= fileName %>.actions';
import { <%= className %>Effects } from './<%= fileName %>.effects';

describe('<%= className %>Effects', () => {
  let actions: Observable<Action>;
  let effects: <%= className %>Effects;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [],
      providers: [
        <%= className %>Effects,
        provideMockActions(() => actions),
        provideMockStore()
      ],
    });

    effects = TestBed.inject(<%= className %>Effects);
  });

  describe('init$', () => {
    it('should work', () => {
      actions = hot('-a-|', { a: <%= className %>Actions.init<%= className %>() });

      const expected = hot('-a-|', { a: <%= className %>Actions.load<%= className %>Success({ <%= propertyName %>: [] }) });

      expect(effects.init$).toBeObservable(expected);
    });
  });
});
